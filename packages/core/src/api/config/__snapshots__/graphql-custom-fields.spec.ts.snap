// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addGraphQLCustomFields() extends OrderAddress if Address custom fields defined 1`] = `
"type Address {
  id: ID
  streetLine1: String
  customFields: AddressCustomFields
}

type AddressCustomFields {
  instructions: String
}

scalar DateTime

scalar JSON

type OrderAddress {
  streetLine1: String
  customFields: AddressCustomFields
}
"
`;

exports[`addGraphQLCustomFields() extends a type 1`] = `
"scalar DateTime

scalar JSON

type Product {
  id: ID
  customFields: ProductCustomFields
}

type ProductCustomFields {
  available: Boolean
}
"
`;

exports[`addGraphQLCustomFields() extends a type with FilterParameters 1`] = `
"input BooleanOperators {
  eq: Boolean
}

input DateOperators {
  eq: String
}

scalar DateTime

scalar JSON

input NumberOperators {
  eq: Float
}

type Product {
  name: String
  customFields: ProductCustomFields
}

type ProductCustomFields {
  available: Boolean
  shortName: String
  rating: Float
  published: DateTime
}

input ProductFilterParameter {
  id: StringOperators
  available: BooleanOperators
  shortName: StringOperators
  rating: NumberOperators
  published: DateOperators
}

input StringOperators {
  eq: String
}
"
`;

exports[`addGraphQLCustomFields() extends a type with SortParameters 1`] = `
"scalar DateTime

scalar JSON

type Product {
  id: ID
  customFields: ProductCustomFields
}

type ProductCustomFields {
  available: Boolean
  shortName: String
}

input ProductSortParameter {
  id: SortOrder
  available: SortOrder
  shortName: SortOrder
}

enum SortOrder {
  ASC
  DESC
}
"
`;

exports[`addGraphQLCustomFields() extends a type with a Create input 1`] = `
"input CreateProductCustomFieldsInput {
  available: Boolean
}

input CreateProductInput {
  image: String
  customFields: CreateProductCustomFieldsInput
}

scalar DateTime

scalar JSON

type Product {
  id: ID
  customFields: ProductCustomFields
}

type ProductCustomFields {
  available: Boolean
  shortName: String
}
"
`;

exports[`addGraphQLCustomFields() extends a type with a Create input and a translation 1`] = `
"input CreateProductCustomFieldsInput {
  available: Boolean
}

input CreateProductInput {
  image: String
  customFields: CreateProductCustomFieldsInput
}

scalar DateTime

scalar JSON

type Product {
  id: ID
  customFields: ProductCustomFields
}

type ProductCustomFields {
  available: Boolean
  shortName: String
}

type ProductTranslation {
  id: ID
  customFields: ProductTranslationCustomFields
}

type ProductTranslationCustomFields {
  shortName: String
}

input ProductTranslationInput {
  id: ID
  customFields: ProductTranslationInputCustomFields
}

input ProductTranslationInputCustomFields {
  shortName: String
}
"
`;

exports[`addGraphQLCustomFields() extends a type with a translation 1`] = `
"scalar DateTime

scalar JSON

type Product {
  id: ID
  translations: [ProductTranslation!]!
  customFields: ProductCustomFields
}

type ProductCustomFields {
  available: Boolean
  shortName: String
}

type ProductTranslation {
  id: ID
  customFields: ProductTranslationCustomFields
}

type ProductTranslationCustomFields {
  shortName: String
}
"
`;

exports[`addGraphQLCustomFields() extends a type with an Update input 1`] = `
"scalar DateTime

scalar JSON

type Product {
  id: ID
  customFields: ProductCustomFields
}

type ProductCustomFields {
  available: Boolean
  shortName: String
}

input UpdateProductCustomFieldsInput {
  available: Boolean
}

input UpdateProductInput {
  image: String
  customFields: UpdateProductCustomFieldsInput
}
"
`;

exports[`addGraphQLCustomFields() publicOnly = true 1`] = `
"scalar DateTime

scalar JSON

type Product {
  id: ID
  customFields: ProductCustomFields
}

type ProductCustomFields {
  available: Boolean
}
"
`;

exports[`addGraphQLCustomFields() uses JSON scalar if no custom fields defined 1`] = `
"scalar DateTime

scalar JSON

type Product {
  id: ID
  customFields: JSON
}
"
`;

exports[`addOrderLineCustomFieldsInput() Does not modify schema when the addItemToOrder mutation not present 1`] = `
"type Mutation {
  createCustomer(id: ID!): Boolean
}
"
`;

exports[`addOrderLineCustomFieldsInput() Modifies the schema when the addItemToOrder & adjustOrderLine mutation is present 1`] = `
"type Mutation {
  addItemToOrder(id: ID!, quantity: Int!, customFields: OrderLineCustomFieldsInput = null): Boolean
  adjustOrderLine(id: ID!, quantity: Int, customFields: OrderLineCustomFieldsInput = null): Boolean
}

input OrderLineCustomFieldsInput {
  giftWrap: Boolean
  message: String
}
"
`;

exports[`addRegisterCustomerCustomFieldsInput() add public writable custom fields to RegisterCustomerInput 1`] = `
"type Mutation {
  registerCustomerAccount(input: RegisterCustomerInput!): Boolean!
}

input RegisterCustomerCustomFieldsInput {
  isB2B: Boolean
  message: String
}

input RegisterCustomerInput {
  emailAddress: String!
  title: String
  firstName: String
  lastName: String
  phoneNumber: String
  password: String
  customFields: RegisterCustomerCustomFieldsInput
}
"
`;
