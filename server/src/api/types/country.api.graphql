type Query {
    countries(options: CountryListOptions): CountryList!
    country(id: ID!): Country
    availableCountries: [Country!]!
}

type Mutation {
    "Create a new Country"
    createCountry(input: CreateCountryInput!): Country!
    "Update an existing Country"
    updateCountry(input: UpdateCountryInput!): Country!
}

type CountryList implements PaginatedList {
    items: [Country!]!
    totalItems: Int!
}

input CountryListOptions {
    take: Int
    skip: Int
    sort: CountrySortParameter
    filter: CountryFilterParameter
}

input CountrySortParameter {
    id: SortOrder
    createdAt: SortOrder
    updatedAt: SortOrder
    code: SortOrder
    name: SortOrder
    enabled: SortOrder
}

input CountryFilterParameter {
    code: StringOperators
    name: StringOperators
    enabled: BooleanOperators
    createdAt: DateOperators
    updatedAt: DateOperators
}
