type Query {
    search(input: SearchInput!): SearchResponse!
}

type Mutation {
    reindex: SearchReindexResponse!
}

type SearchReindexResponse {
    success: Boolean!
}

input SearchInput {
    term: String
    facetIds: [String!]
    groupByProduct: Boolean
    take: Int
    skip: Int
    sort: SearchResultSortParameter
}

input SearchResultSortParameter {
    name: SortOrder
    price: SortOrder
}

type SearchResponse {
    items: [SearchResult!]!
    totalItems: Int!
    facetValues: [FacetValue!]!
}

type SearchResult {
    sku: String!
    slug: String!
    productId: ID!
    productName: String!
    productPreview: String!
    productVariantId: ID!
    productVariantName: String!
    productVariantPreview: String!
    price: Int!
    currencyCode: CurrencyCode!
    description: String!
    facetIds: [String!]!
    facetValueIds: [String!]!
    score: Float!
}
