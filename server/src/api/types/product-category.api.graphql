type Query {
    productCategories(languageCode: LanguageCode, options: ProductCategoryListOptions): ProductCategoryList!
    productCategory(id: ID!, languageCode: LanguageCode): ProductCategory
}

type Mutation {
    "Create a new ProductCategory"
    createProductCategory(input: CreateProductCategoryInput!): ProductCategory!

    "Update an existing ProductCategory"
    updateProductCategory(input: UpdateProductCategoryInput!): ProductCategory!

    "Move a ProductCategory to a different parent or index"
    moveProductCategory(input: MoveProductCategoryInput!): ProductCategory!
}

type ProductCategoryList implements PaginatedList {
    items: [ProductCategory!]!
    totalItems: Int!
}

input ProductCategoryListOptions {
    take: Int
    skip: Int
    sort: ProductCategorySortParameter
    filter: ProductCategoryFilterParameter
}

input ProductCategorySortParameter {
    id: SortOrder
    createdAt: SortOrder
    updatedAt: SortOrder
    name: SortOrder
    description: SortOrder
}

input ProductCategoryFilterParameter {
    name: StringOperators
    description: StringOperators
    createdAt: DateOperators
    updatedAt: DateOperators
}

input MoveProductCategoryInput {
    categoryId: ID!
    parentId: ID!
    index: Int!
}
