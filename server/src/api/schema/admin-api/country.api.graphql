type Query {
    countries(options: CountryListOptions): CountryList!
    country(id: ID!): Country
    availableCountries: [Country!]!
}

type Mutation {
    "Create a new Country"
    createCountry(input: CreateCountryInput!): Country!

    "Update an existing Country"
    updateCountry(input: UpdateCountryInput!): Country!

    "Delete a Country"
    deleteCountry(id: ID!): DeletionResponse!
}

input CountryTranslationInput {
    id: ID
    languageCode: LanguageCode!
    name: String
}

input CreateCountryInput {
    code: String!
    translations: [CountryTranslationInput!]!
    enabled: Boolean!
}


input UpdateCountryInput {
    id: ID!
    code: String
    translations: [CountryTranslationInput!]
    enabled: Boolean
}

input CountryListOptions {
    take: Int
    skip: Int
    sort: CountrySortParameter
    filter: CountryFilterParameter
}

input CountrySortParameter {
    id: SortOrder
    createdAt: SortOrder
    updatedAt: SortOrder
    code: SortOrder
    name: SortOrder
    enabled: SortOrder
}

input CountryFilterParameter {
    code: StringOperators
    name: StringOperators
    enabled: BooleanOperators
    createdAt: DateOperators
    updatedAt: DateOperators
}
